{
    "componentChunkName": "component---src-pages-index-js",
    "path": "/",
    "result": {"data":{"hero":{"edges":[{"node":{"frontmatter":{"title":"Hello World! My name is","name":"Salah Alkaseri","subtitle":"I love exploring new things!","buttonText":"Hire Me!"},"html":"<p>I'm an India based developer with a goal-driven creative mindset and passion for learning and innovating.</p>\n<p>Currently I am a Student of Computer science And Technology At <a href=\"https://www.mgmccsit.ac.in/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">MGM College</a> and a self taught learner at <a href=\"https://www.sololearn.com/profile/20463074\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">SoloLearn</a>.</p>\n<p>Outside work, I occasionally make 2D Games on <a href=\"https://unity.com/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Unity</a> or create Android Apps using FLutter/Android Studio <a href=\"https://salahalkaseri7.github.io/Typing-speedo/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">TypingSpeedo</a>. Off-screen, I Read Books like <a href=\"https://en.wikipedia.org/wiki/Mastery_(book)\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">mastery</a>!</p>"}}]},"about":{"edges":[{"node":{"frontmatter":{"title":"About Me","avatar":{"childImageSharp":{"fluid":{"tracedSVG":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='400'%20height='638'%20viewBox='0%200%20400%20638'%20preserveAspectRatio='none'%3e%3cpath%20d='M0%20319v319h401V319a16023%2016023%200%2000-2-182l-1-15a204%20204%200%2001-2-42c-2%200-3-4-2-6l1-5c0-4-2-6-3-4l-4%204c-4%202-4%206%200%207%204%200%204%203%201%206l-2%202%202%2014c4%2020%205%2023%205%2031l4%2014%202%208v131a683%20683%200%2001-4%20126c0-2-2-5-4-5l-2-6-1-5-3-19a407%20407%200%2000-9-54l-5-24c-1-6-3-11-5-12l-4-5-2-4-5%203c-5%202-5%202-3%204s-1%203-3%201h-2v2l9%207%203%202%204%205c4%204%204%205%204%2011v6l-3-1-4-2c-3-3-4%200-4%207v8c2%201%202%201%202%206v4c-1%200-3-3-3-5l-1-4v-4l-1-10c-1-3-5-14-7-14l3%2022a4123%204123%200%200110%2069c0%202-5%201-19-7s-16-9-16-12c0-4-3-13-5-15l-13-7c-14-7-13-6-15-20l-1-7%204-4%207-4%204-4c2-2%202-2%200-4-4-4-8-2-8%203%200%203%200%204-1%203l-1-4-1-2v-1c1-2-2-1-6%202-6%204-15%203-16-1l-1-1c0%202-6-4-6-5h2l1-1-2-1-4-1h-1l-8-4-9-3h-3l1-2%204-3%203-3%205-2c2-2%207-4%2012-5%208-2%2017-7%2016-10l2-2v-2c-1-1-1-1%201-2%202%200%202%200%201-3-2-2-2-6-1-6l2%201c2%203%203%201%204-8%200-5-4-15-7-15l-1-1h2l1-1-3-1c-2%200-2%200-1-1s1-1-2-1h-3l3-1%202-1c-3-2-11-1-15%200h-3l-1-1v-1l-3-2-4-1v-9l-1-3c-2-2-1-3%202-2l1-1-2-1c-2%200-6-4-6-6l-1-3-1%202v2l-2%201c-1%203-8-1-9-5-2-4%202-9%206-7l1%202%202%201c1%200%202%200%201%202h3c2-3%2020%201%2019%204l-1%202-1%201c-2%200-2%203%200%206l1%205c-1%202%200%203%203%202l6-2c6-1%208-6%203-12l-1-2%201-1c-1-2-7-5-14-6-9-1-9-2-1-2l1-3c0-2%200-2%204-2l8%203%204%202v-3l-1-2c-2%201-3-4-2-9%200-3%200-4-2-5h-4l-3-1c0-2-1-2-4-2-5%201-3-1%202-3%206-2%206-4%201-8-4-3-4-4%201-3%204%201%204%202%204%205%200%204%202%209%205%209%205%202%206-1%202-4l-2-1%202-6c2-6%202-7%200-7v-2c1-4-2-14-5-14l-1-1h-3l-5%201-6%203-6%202c0-3%202-6%204-6%200%201%202%200%203-2l5-2c2%200%203%200%203-2v-5c0-2-2-4-9-7-3-1-3-1-2-2%202-1%202-2%201-4v-2l-1-2c-1-2%200-4%202-4%202%201%208%2011%209%2014%200%202%202%203%204%205%205%202%2011%208%2013%2013v11l-1%204c0%204%200%204%202%203v-4c-1-2-1-2%201-2l1-1c-1-1%200-1%202-1l4-1c1-2%200-2-1-2-5%200-5-2-1-2%206-1%208-3%204-3-2-1-2-1%201-1s6-3%205-6h1c1%201%201%201%201-2%200-4%201-5%203-3l4-1c4-4%205-4%205%200v5c1%201%204%200%204-1%200-2%204-4%205-3s1%201%202-1l5-5c3-2%203-4-1-2s-3%200%200-2c3-1%203-2%204-7l-1-6v-2l-1-2c-1-1-6%201-6%202l-2%201-3%203-2%202c-1-1-15%2012-14%2013l-1%201-1-1c-1-1-2%200-4%201l-4%202c-1-1-1-19%201-24%201-6-3-2-15%2013l-7%2010-3-3-5-8-4-6-2-3c-2-2-2-2-1-8V74c0-6%200-6%207-18%206-9%206-9%203-9-1-1-1-1%201-1%203%200%207-5%2011-14l4-5c2-2%201-3-1-3l-2-1-2-2h-3l-2%201-3%201-7%202c-9%202-13%207-5%207%202%200%202%200%201%201h4c6%200%207%200%207%202%201%202%200%202-3%203l-3%201-2%201h-4c0%203-13%202-15-1v-3c3%201%205-4%203-6h-5c-6%201-9%201-7-1%201-1%201-2-2-2l-2-2c1-1%200-2-1-2-3-1-2-3%200-3l4-2c2%200%202%200%202%202s1%203%203%201l5-1c2%200%203%200%204-3l2-2h1l3-1%202%201c-2%202%203%201%2010-2l8-2h3c1-2%207-5%2014-6l7-2h60l-6%209c-9%2012-9%2012-7%2015%203%202%202%204-1%204-2%200-3%201-3%203l-3%202v3h1c1-3%205-3%205-1l2%202c3%201%204%200%204-2l1-1%203-3c2-3%204-4%207-2%202%201%202%201%202-2%200-4%201-7%203-7l2-3c0-2%202-4%203-5l4-4%202-1%203-2%202-1c1%200%205-2%206-5%201-2-8-2-196-2H0v319M330%2047c-5%206-6%208-6%2012l-1%206c-2%202-1%203%201%204l2-1c0-3%205-8%206-7%201%202%204-2%205-8v-5l2-4c1-2%202-3%201-4l-1%201h-1c-2-2-2-2-8%206m-122%201l-2%202c0%201%204%204%205%203%201%200%2010%206%2021%2016%2010%2010%2017%2015%2018%2015%202-3-21-31-26-31l-1-1-5-2-5-2h-5m-25%202c-3%205-2%2017%203%2028%201%203%204%204%203%202s0-2%203-2l4%201c0%201%206%203%2010%203%202%200%205%200%207%202l4%201-3%201c-3%200-3%200-1%2010%202%208%205%2011%208%209%201-1%202%200%204%203%204%205%205%205%205%200l2-5c2-3%202-9-1-8l-2-1-1-1-2-2-4-3c-2%200-2%200-1-1%202-1%207%200%206%201l1%201h2c1%200%205%203%204%204l1%201v1c-2%201%200%203%203%202v-5l-3-9c-3-6-5-7-5-4%200%202-1%203-4%202l-5-1-3-3-2-6c-4-6-4-5%204-3%204%200%204-2-1-4l-5-4-13-8c-6-2-17-4-18-2m9%2040c6%2012%2030%2030%2030%2022%200-2-2-3-5-4-5-2-6-4-6-9%200-10-1-11-14-12l-7-1%202%204m-1%2021l-7%202-4%201v1l2%203%202%203c1%200%202%201%202%204l2%206%207%2013c0%202%202%204%203%204l2%202c1%204%203%205%204%203%201-1%201-1%201%201s2%204%204%203l1%201c-1%201%200%201%201%201l1%201c-2%202%201%206%204%207l6-2%201-1c5-1%2010-8%209-16-1-3%200-6%201-10%203-7%203-8%200-8-1%201-2%200-3-1-1-2-7-4-11-3h-4c-1-1-1-1%201-2%203%200%203-2%200-2l-2-3c0-3-3-5-10-7l-9-2-4%201m142%2018h-1l-1%201v17a892%20892%200%20017%2033l1%201c-2%200-2%200%200%201s2%201%200%201l-2%202-1%204c0%201%200%202%202%202l1%201v3l1%205c0%208%201%2014%203%2015l1%201c-2%200-2%201-2%204%201%204%202%205%205%204%201%200%205%203%204%204h7l2%201c2%200%201-7-2-9-1-1-2-3%200-2l1-4a1357%201357%200%2001-6-30l-4-2h-3l3-1c4-1%205-2%202-13l-2-9-1-6-3%202c-6%203-7%202-7-8l1-10%201%202c0%202%203%203%204%200v-7c-1-1-4%200-4%202s-2%202-3-1l-2-4c-1-2-1-2-2%200m-11%204a1683%201683%200%200012%2071l2%203v-3l-2-10-1-9-1-4a838%20838%200%2000-10-48m0%20162c-10%205-11%206-8%209v2c-1%202%207%200%2016-5%209-4%2011-7%208-9l-1-1c1-3-7%200-15%204m-92%2011l-7%2011-4%205c1%201%200%203-2%205-1%202-3%205-2%206l-1%204c-1%203%200%206%202%209%202%202%202%202-2%206-3%204-12%2010-14%2010l-2%201c-1%201-2%202-5%201l-3%201-2%201-2%201%202%201c3%201%202%201-2%202-2%200-2%201-2%202l-1%202h-1l-2-1c-4-2-4%200%200%205%208%209%2022%2039%2038%2080a809%20809%200%200047%2095c-3%200-4%203-4%206%202%206%2016%2020%2021%2020%202%200%204-3%204-5l2-4%202-3-2-4-9-10-12-14-11-14c-6-6-26-45-36-69a1254%201254%200%2000-31-71l13%206a627%20627%200%200026%2013c8%205%208%205%2011-1%202-5%204-6%204-1l1%202c1%200%2010-8%2010-10s2%201%206%2010c3%209%2010%2020%2021%2038a331%20331%200%200135%2065l5%2012-1%204c-3%205-2%205%202%200%203-4%204-5%207-4%203%202%203%205%200%2011s-5%207-7%206h-2l4%202c3%200%204%201%204%203%200%203%201%203%205-1%209-7%208-20-3-24-4-1-4-2-10-13l-7-13a465%20465%200%2000-35-58c-17-26-23-41-22-59%201-9%201-9-1-6l-3%2011-1%205h-1l-3%201c-2%200-2-6%200-11v-6l-1-7-1-5-1-2v-5c-4-13-9-39-9-43%200-7-1-6-5%201'%20fill='%2364ffda'%20fill-rule='evenodd'/%3e%3c/svg%3e","aspectRatio":0.6272401433691757,"src":"/chandrikadeb7.github.io/static/11a927b2d9fc3eca4bacca8a4b7d1cd5/ea4ab/me.jpg","srcSet":"/chandrikadeb7.github.io/static/11a927b2d9fc3eca4bacca8a4b7d1cd5/477ba/me.jpg 175w,\n/chandrikadeb7.github.io/static/11a927b2d9fc3eca4bacca8a4b7d1cd5/06776/me.jpg 350w,\n/chandrikadeb7.github.io/static/11a927b2d9fc3eca4bacca8a4b7d1cd5/ea4ab/me.jpg 700w,\n/chandrikadeb7.github.io/static/11a927b2d9fc3eca4bacca8a4b7d1cd5/3055e/me.jpg 1050w,\n/chandrikadeb7.github.io/static/11a927b2d9fc3eca4bacca8a4b7d1cd5/40431/me.jpg 1204w","srcWebp":"/chandrikadeb7.github.io/static/11a927b2d9fc3eca4bacca8a4b7d1cd5/89afa/me.webp","srcSetWebp":"/chandrikadeb7.github.io/static/11a927b2d9fc3eca4bacca8a4b7d1cd5/9fca7/me.webp 175w,\n/chandrikadeb7.github.io/static/11a927b2d9fc3eca4bacca8a4b7d1cd5/37a4e/me.webp 350w,\n/chandrikadeb7.github.io/static/11a927b2d9fc3eca4bacca8a4b7d1cd5/89afa/me.webp 700w,\n/chandrikadeb7.github.io/static/11a927b2d9fc3eca4bacca8a4b7d1cd5/78e7a/me.webp 1050w,\n/chandrikadeb7.github.io/static/11a927b2d9fc3eca4bacca8a4b7d1cd5/6309b/me.webp 1204w","sizes":"(max-width: 700px) 100vw, 700px"}}},"skills":["Proficient at Java","Android Dev / FLUTTER","Web dev(Html,Js,Css)","C++","VFX Editor","Animation/ Stop Motion","IntelliJ Idea/ VScode"]},"html":"<p>Hello! Interestingly, I have been a student of Poly Technic Computer branch and got introduced to programming in my Third Sem of year And At <a href=\"https://www.mgmccsit.ac.in/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">MGM college Nanded</a>. Since then, I started developing Android Apps And Web Development and pursuing my Bachelors in Computer Science and Engineering.</p>\n<p>Today, I'm currently working on Self Projects and Android Devlopment using Flutter(Dart) and also Android Studio.</p>"}}]},"jobs":{"edges":[{"node":{"frontmatter":{"title":"js pro","company":"typing speedo","range":"July 2020 - Present","url":"https://salahalkaseri7.github.io/Typing-speedo/"},"html":"<ul>\n<li>will modify soon!</li>\n</ul>"}},{"node":{"frontmatter":{"title":"Technical Writer","company":"flutter Tech","range":"July 2020 - August 2020","url":"https://salahalkaseri7.github.io/Typing-speedo/"},"html":"<ul>\n<li>will modify soon!</li>\n</ul>"}},{"node":{"frontmatter":{"title":"Android/Ios/web Dev","company":"Flutter","range":"July 2020 - Present","url":"https://flutter.dev/?gclid=CjwKCAiAlfqOBhAeEiwAYi43F2Z9ap4gJN-ZoXICu__0hQXPJEngSgXu4tqUKp0N-jB0oOs3iwHuoBoCTZoQAvD_BwE&gclsrc=aw.ds"},"html":"<ul>\n<li>Learning The Fastest Growing Programming Lang. Which Allows The Developer To Deploy At Any Platform <a href=\"https://flutter.dev/?gclid=CjwKCAiAlfqOBhAeEiwAYi43F2Z9ap4gJN-ZoXICu__0hQXPJEngSgXu4tqUKp0N-jB0oOs3iwHuoBoCTZoQAvD_BwE&#x26;gclsrc=aw.ds\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">Flutter</a>.</li>\n</ul>"}},{"node":{"frontmatter":{"title":"typing speedo2","company":"Tas","range":"May - June 2019","url":"https://salahalkaseri7.github.io/Typing-speedo/"},"html":"<ul>\n<li>will modify soon!</li>\n</ul>"}},{"node":{"frontmatter":{"title":"Research Intern","company":"sal","range":"May - June 2018","url":"https://salahalkaseri7.github.io/Typing-speedo/"},"html":"<ul>\n<li>meta verse project by salah_ coming soon!</li>\n</ul>"}}]},"featured":{"edges":[{"node":{"frontmatter":{"title":"RANDOM COMPILER","cover":{"childImageSharp":{"fluid":{"tracedSVG":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='400'%20height='300'%20viewBox='0%200%20400%20300'%20preserveAspectRatio='none'%3e%3cpath%20d='M0%20150v150h401V0H0v150m175-55c-4%202-42%2028-44%2031-5%206-6%2011-6%2023%200%2021%201%2023%2030%2042%2018%2013%2020%2014%2024%2014%2010%200%2014-6%2014-18%200-13-1-13-19-26l-16-11%2017-12c19-13%2019-13%2019-25%200-14-9-22-19-18m39%201c-5%203-7%207-7%2017%200%2012%201%2013%2019%2025l16%2011-16%2012-18%2013-2%2010c-1%2014%204%2021%2014%2021%203%200%206-2%2024-13%2031-21%2031-20%2031-42s-1-23-31-43c-20-14-23-15-30-11'%20fill='%2364ffda'%20fill-rule='evenodd'/%3e%3c/svg%3e","aspectRatio":1.3358778625954197,"src":"/chandrikadeb7.github.io/static/a9f5aba3427dc23e7d569affa937805f/60290/codehs.png","srcSet":"/chandrikadeb7.github.io/static/a9f5aba3427dc23e7d569affa937805f/847ef/codehs.png 175w,\n/chandrikadeb7.github.io/static/a9f5aba3427dc23e7d569affa937805f/91cba/codehs.png 350w,\n/chandrikadeb7.github.io/static/a9f5aba3427dc23e7d569affa937805f/60290/codehs.png 700w,\n/chandrikadeb7.github.io/static/a9f5aba3427dc23e7d569affa937805f/f9ff4/codehs.png 800w","srcWebp":"/chandrikadeb7.github.io/static/a9f5aba3427dc23e7d569affa937805f/89afa/codehs.webp","srcSetWebp":"/chandrikadeb7.github.io/static/a9f5aba3427dc23e7d569affa937805f/9fca7/codehs.webp 175w,\n/chandrikadeb7.github.io/static/a9f5aba3427dc23e7d569affa937805f/37a4e/codehs.webp 350w,\n/chandrikadeb7.github.io/static/a9f5aba3427dc23e7d569affa937805f/89afa/codehs.webp 700w,\n/chandrikadeb7.github.io/static/a9f5aba3427dc23e7d569affa937805f/b0751/codehs.webp 800w","sizes":"(max-width: 700px) 100vw, 700px"}}},"tech":["c/c++","js","java","Python"],"github":"https://github.com/Salahalkaseri7/Salahalkaseri7.github.io/tree/gh-pages","external":"https://salahalkaseri7.github.io"},"html":"<h1>OS Scheduling Algorithms</h1>\n<hr>\n<hr>\n<blockquote>\n<p>C program on FCFS(First come first serve)</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdio.h></span></span>\r\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">int</span> AT<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>BT<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>WT<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>TT<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">int</span> burst<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>cmpl_T<span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">float</span> Avg_WT<span class=\"token punctuation\">,</span>Avg_TT<span class=\"token punctuation\">,</span>Total<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Enter number of the process\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Enter Arrival time and Burst time of the process\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"AT\\tBT\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>n<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">{</span>\r\n        <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d%d\"</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>AT<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>BT<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>n<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">{</span>\r\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\r\n            WT<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>AT<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">else</span>\r\n            WT<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>burst<span class=\"token operator\">-</span>AT<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n        burst<span class=\"token operator\">+=</span>BT<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n        Total<span class=\"token operator\">+=</span>WT<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    Avg_WT<span class=\"token operator\">=</span>Total<span class=\"token operator\">/</span>n<span class=\"token punctuation\">;</span>\r\n    cmpl_T<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n    Total<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>n<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">{</span>\r\n        cmpl_T<span class=\"token operator\">+=</span>BT<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n        TT<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>cmpl_T<span class=\"token operator\">-</span>AT<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n        Total<span class=\"token operator\">+=</span>TT<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    Avg_TT<span class=\"token operator\">=</span>Total<span class=\"token operator\">/</span>n<span class=\"token punctuation\">;</span>\r\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Process ,Waiting_time ,TurnA_time\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>n<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">{</span>\r\n        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\\t\\t%d\\t\\t%d\\n\"</span><span class=\"token punctuation\">,</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>WT<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>TT<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Average waiting time is : %f\\n\"</span><span class=\"token punctuation\">,</span>Avg_WT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Average turn around time is : %f\\n\"</span><span class=\"token punctuation\">,</span>Avg_TT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span> </code></pre></div>\n<blockquote>\n<p>Shortest Job First Program in C (Non-preemptive)</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdio.h></span></span>\r\n <span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">int</span> bt<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>wt<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>tat<span class=\"token punctuation\">[</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">,</span>total<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>pos<span class=\"token punctuation\">,</span>temp<span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">float</span> avg_wt<span class=\"token punctuation\">,</span>avg_tat<span class=\"token punctuation\">;</span>\r\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Enter number of process:\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\nEnter Burst Time:\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>n<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">{</span>\r\n        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"p%d:\"</span><span class=\"token punctuation\">,</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>bt<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        p<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>         \r\n    <span class=\"token punctuation\">}</span>\r\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>n<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">{</span>\r\n        pos<span class=\"token operator\">=</span>i<span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>j<span class=\"token operator\">=</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">&lt;</span>n<span class=\"token punctuation\">;</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\r\n        <span class=\"token punctuation\">{</span>\r\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>bt<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;</span>bt<span class=\"token punctuation\">[</span>pos<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\r\n                pos<span class=\"token operator\">=</span>j<span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n        temp<span class=\"token operator\">=</span>bt<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n        bt<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>bt<span class=\"token punctuation\">[</span>pos<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n        bt<span class=\"token punctuation\">[</span>pos<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>temp<span class=\"token punctuation\">;</span>\r\n        temp<span class=\"token operator\">=</span>p<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n        p<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>p<span class=\"token punctuation\">[</span>pos<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n        p<span class=\"token punctuation\">[</span>pos<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>temp<span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    wt<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>            \r\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>n<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">{</span>\r\n        wt<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">&lt;</span>i<span class=\"token punctuation\">;</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\r\n            wt<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">+=</span>bt<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n        total<span class=\"token operator\">+=</span>wt<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    avg_wt<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>total<span class=\"token operator\">/</span>n<span class=\"token punctuation\">;</span>      \r\n    total<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\nProcess\\t    Burst Time    \\tWaiting Time\\tTurnaround Time\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>n<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">{</span>\r\n        tat<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>bt<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>wt<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>   \r\n        total<span class=\"token operator\">+=</span>tat<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\np%d\\t\\t  %d\\t\\t    %d\\t\\t\\t%d\"</span><span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>bt<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>wt<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>tat<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    avg_tat<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">float</span><span class=\"token punctuation\">)</span>total<span class=\"token operator\">/</span>n<span class=\"token punctuation\">;</span>    \r\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\\nAverage Waiting Time=%f\"</span><span class=\"token punctuation\">,</span>avg_wt<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\nAverage Turnaround Time=%f\\n\"</span><span class=\"token punctuation\">,</span>avg_tat<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<blockquote>\n<p>Shortest Job First Program in C (Preemptive)</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span> <span class=\"token string\">&lt;stdio.h></span></span>\r\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> \r\n<span class=\"token punctuation\">{</span>\r\n      <span class=\"token keyword\">int</span> arrival_time<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> burst_time<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> temp<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n      <span class=\"token keyword\">int</span> i<span class=\"token punctuation\">,</span> smallest<span class=\"token punctuation\">,</span> count <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> time<span class=\"token punctuation\">,</span> limit<span class=\"token punctuation\">;</span>\r\n      <span class=\"token keyword\">double</span> wait_time <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> turnaround_time <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> end<span class=\"token punctuation\">;</span>\r\n      <span class=\"token keyword\">float</span> average_waiting_time<span class=\"token punctuation\">,</span> average_turnaround_time<span class=\"token punctuation\">;</span>\r\n      <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\nEnter the Total Number of Processes:\\t\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n      <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>limit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \r\n      <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\nEnter Details of %d Processes\"</span><span class=\"token punctuation\">,</span> limit<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n      <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> limit<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\r\n      <span class=\"token punctuation\">{</span>\r\n            <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\nEnter Arrival Time:\\t\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>arrival_time<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Enter Burst Time:\\t\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">&amp;</span>burst_time<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span> \r\n            temp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> burst_time<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n      <span class=\"token punctuation\">}</span>\r\n      burst_time<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">9999</span><span class=\"token punctuation\">;</span>  \r\n      <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>time <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> count <span class=\"token operator\">!=</span> limit<span class=\"token punctuation\">;</span> time<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\r\n      <span class=\"token punctuation\">{</span>\r\n            smallest <span class=\"token operator\">=</span> <span class=\"token number\">9</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> limit<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\r\n            <span class=\"token punctuation\">{</span>\r\n                  <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>arrival_time<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;=</span> time <span class=\"token operator\">&amp;&amp;</span> burst_time<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">&lt;</span> burst_time<span class=\"token punctuation\">[</span>smallest<span class=\"token punctuation\">]</span> <span class=\"token operator\">&amp;&amp;</span> burst_time<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\r\n                  <span class=\"token punctuation\">{</span>\r\n                        smallest <span class=\"token operator\">=</span> i<span class=\"token punctuation\">;</span>\r\n                  <span class=\"token punctuation\">}</span>\r\n            <span class=\"token punctuation\">}</span>\r\n            burst_time<span class=\"token punctuation\">[</span>smallest<span class=\"token punctuation\">]</span><span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>burst_time<span class=\"token punctuation\">[</span>smallest<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\r\n            <span class=\"token punctuation\">{</span>\r\n                  count<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\r\n                  end <span class=\"token operator\">=</span> time <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\r\n                  wait_time <span class=\"token operator\">=</span> wait_time <span class=\"token operator\">+</span> end <span class=\"token operator\">-</span> arrival_time<span class=\"token punctuation\">[</span>smallest<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> temp<span class=\"token punctuation\">[</span>smallest<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n                  turnaround_time <span class=\"token operator\">=</span> turnaround_time <span class=\"token operator\">+</span> end <span class=\"token operator\">-</span> arrival_time<span class=\"token punctuation\">[</span>smallest<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n            <span class=\"token punctuation\">}</span>\r\n      <span class=\"token punctuation\">}</span>\r\n      average_waiting_time <span class=\"token operator\">=</span> wait_time <span class=\"token operator\">/</span> limit<span class=\"token punctuation\">;</span> \r\n      average_turnaround_time <span class=\"token operator\">=</span> turnaround_time <span class=\"token operator\">/</span> limit<span class=\"token punctuation\">;</span>\r\n      <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\\nAverage Waiting Time:\\t%lf\\n\"</span><span class=\"token punctuation\">,</span> average_waiting_time<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n      <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Average Turnaround Time:\\t%lf\\n\"</span><span class=\"token punctuation\">,</span> average_turnaround_time<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n      <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n</code></pre></div>\n<blockquote>\n<p>C program of the priority scheduling (Preemptive)</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdio.h></span></span>\r\n<span class=\"token keyword\">struct</span> <span class=\"token class-name\">process</span>\r\n<span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">int</span> WT<span class=\"token punctuation\">,</span>AT<span class=\"token punctuation\">,</span>BT<span class=\"token punctuation\">,</span>TAT<span class=\"token punctuation\">,</span>PT<span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">struct</span> <span class=\"token class-name\">process</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n\r\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span>temp<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>t<span class=\"token punctuation\">,</span>count<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>short_p<span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">float</span> total_WT<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>total_TAT<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>Avg_WT<span class=\"token punctuation\">,</span>Avg_TAT<span class=\"token punctuation\">;</span>\r\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Enter the number of the process\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Enter the arrival time , burst time and priority of the process\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"AT BT PT\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>n<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">{</span>\r\n        <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d%d%d\"</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>AT<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>BT<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>PT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        temp<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>BT<span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    a<span class=\"token punctuation\">[</span><span class=\"token number\">9</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>PT<span class=\"token operator\">=</span><span class=\"token number\">10000</span><span class=\"token punctuation\">;</span>\r\n    \r\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>t<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>count<span class=\"token operator\">!=</span>n<span class=\"token punctuation\">;</span>t<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">{</span>\r\n        short_p<span class=\"token operator\">=</span><span class=\"token number\">9</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>n<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\r\n        <span class=\"token punctuation\">{</span>\r\n            <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>short_p<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>PT<span class=\"token operator\">></span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>PT <span class=\"token operator\">&amp;&amp;</span> a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>AT<span class=\"token operator\">&lt;=</span>t <span class=\"token operator\">&amp;&amp;</span> a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>BT<span class=\"token operator\">></span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\r\n            <span class=\"token punctuation\">{</span>\r\n                short_p<span class=\"token operator\">=</span>i<span class=\"token punctuation\">;</span>\r\n            <span class=\"token punctuation\">}</span>\r\n        <span class=\"token punctuation\">}</span>\r\n        \r\n        a<span class=\"token punctuation\">[</span>short_p<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>BT<span class=\"token operator\">=</span>a<span class=\"token punctuation\">[</span>short_p<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>BT<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>short_p<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>BT<span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\r\n        <span class=\"token punctuation\">{</span>\r\n            count<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\r\n            a<span class=\"token punctuation\">[</span>short_p<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>WT<span class=\"token operator\">=</span>t<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>a<span class=\"token punctuation\">[</span>short_p<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>AT<span class=\"token operator\">-</span>temp<span class=\"token punctuation\">[</span>short_p<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n            a<span class=\"token punctuation\">[</span>short_p<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>TAT<span class=\"token operator\">=</span>t<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>a<span class=\"token punctuation\">[</span>short_p<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>AT<span class=\"token punctuation\">;</span>\r\n            total_WT<span class=\"token operator\">=</span>total_WT<span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span>short_p<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>WT<span class=\"token punctuation\">;</span>\r\n            total_TAT<span class=\"token operator\">=</span>total_TAT<span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span>short_p<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>TAT<span class=\"token punctuation\">;</span>\r\n        <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    Avg_WT<span class=\"token operator\">=</span>total_WT<span class=\"token operator\">/</span>n<span class=\"token punctuation\">;</span>\r\n    Avg_TAT<span class=\"token operator\">=</span>total_TAT<span class=\"token operator\">/</span>n<span class=\"token punctuation\">;</span>\r\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"ID WT TAT\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>n<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">{</span>\r\n        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d %d\\t%d\\n\"</span><span class=\"token punctuation\">,</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>WT<span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>TAT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    \r\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Avg waiting time of the process  is %f\\n\"</span><span class=\"token punctuation\">,</span>Avg_WT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Avg turn around time of the process is %f\\n\"</span><span class=\"token punctuation\">,</span>Avg_TAT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    \r\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n\r\n</code></pre></div>\n<blockquote>\n<p>C program on the priority scheduling algorithm (Non preemptive)</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdio.h></span></span>\r\n<span class=\"token keyword\">struct</span> <span class=\"token class-name\">process</span>\r\n<span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">int</span> id<span class=\"token punctuation\">,</span>WT<span class=\"token punctuation\">,</span>AT<span class=\"token punctuation\">,</span>BT<span class=\"token punctuation\">,</span>TAT<span class=\"token punctuation\">,</span>PR<span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">struct</span> <span class=\"token class-name\">process</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token keyword\">void</span> <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>b<span class=\"token punctuation\">,</span><span class=\"token keyword\">int</span> <span class=\"token operator\">*</span>c<span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">int</span> tem<span class=\"token punctuation\">;</span>\r\n    tem<span class=\"token operator\">=</span><span class=\"token operator\">*</span>c<span class=\"token punctuation\">;</span>\r\n    <span class=\"token operator\">*</span>c<span class=\"token operator\">=</span><span class=\"token operator\">*</span>b<span class=\"token punctuation\">;</span>\r\n    <span class=\"token operator\">*</span>b<span class=\"token operator\">=</span>tem<span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span>\r\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">int</span> n<span class=\"token punctuation\">,</span>check_ar<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">int</span> Cmp_time<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">float</span> Total_WT<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>Total_TAT<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>Avg_WT<span class=\"token punctuation\">,</span>Avg_TAT<span class=\"token punctuation\">;</span>\r\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Enter the number of process \\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Enter the Arrival time , Burst time and priority of the process\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"AT BT PR\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>n<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">{</span>\r\n        <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d%d%d\"</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>AT<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>BT<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>PR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n        a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>id<span class=\"token operator\">=</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>i<span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\r\n         check_ar<span class=\"token operator\">=</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>AT<span class=\"token punctuation\">;</span>\r\n         \r\n        <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>check_ar<span class=\"token operator\">!=</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>AT <span class=\"token punctuation\">)</span>\r\n         check_ar<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\r\n        \r\n    <span class=\"token punctuation\">}</span>\r\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>check_ar<span class=\"token operator\">!=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">{</span>\r\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>n<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\r\n        <span class=\"token punctuation\">{</span>\r\n            <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">&lt;</span>n<span class=\"token operator\">-</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\r\n            <span class=\"token punctuation\">{</span>\r\n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>AT<span class=\"token operator\">></span>a<span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>AT<span class=\"token punctuation\">)</span>\r\n                <span class=\"token punctuation\">{</span>\r\n                      <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                      <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>AT<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>AT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                      <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>BT<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>BT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                      <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>PR<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">[</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>PR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                <span class=\"token punctuation\">}</span>\r\n            <span class=\"token punctuation\">}</span>\r\n        <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>check_ar<span class=\"token operator\">!=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">{</span>\r\n        a<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>WT<span class=\"token operator\">=</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>AT<span class=\"token punctuation\">;</span>\r\n        a<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>TAT<span class=\"token operator\">=</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>BT<span class=\"token operator\">-</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>AT<span class=\"token punctuation\">;</span>\r\n        Cmp_time<span class=\"token operator\">=</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>TAT<span class=\"token punctuation\">;</span>\r\n        Total_WT<span class=\"token operator\">=</span>Total_WT<span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>WT<span class=\"token punctuation\">;</span>\r\n        Total_TAT<span class=\"token operator\">=</span>Total_TAT<span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>TAT<span class=\"token punctuation\">;</span>\r\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>n<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\r\n        <span class=\"token punctuation\">{</span>\r\n            <span class=\"token keyword\">int</span> min<span class=\"token operator\">=</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>PR<span class=\"token punctuation\">;</span>\r\n            <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j<span class=\"token operator\">=</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">&lt;</span>n<span class=\"token punctuation\">;</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\r\n            <span class=\"token punctuation\">{</span>\r\n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>min<span class=\"token operator\">></span>a<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>PR <span class=\"token operator\">&amp;&amp;</span> a<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>AT<span class=\"token operator\">&lt;=</span>Cmp_time<span class=\"token punctuation\">)</span>\r\n                <span class=\"token punctuation\">{</span>\r\n                      min<span class=\"token operator\">=</span>a<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>PR<span class=\"token punctuation\">;</span>\r\n                      <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                      <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>AT<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>AT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                      <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>BT<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>BT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                      <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>PR<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>PR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                      \r\n                <span class=\"token punctuation\">}</span>\r\n                \r\n            <span class=\"token punctuation\">}</span>\r\n            a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>WT<span class=\"token operator\">=</span>Cmp_time<span class=\"token operator\">-</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>AT<span class=\"token punctuation\">;</span>\r\n            Total_WT<span class=\"token operator\">=</span>Total_WT<span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>WT<span class=\"token punctuation\">;</span>\r\n            Cmp_time<span class=\"token operator\">=</span>Cmp_time<span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>BT<span class=\"token punctuation\">;</span>\r\n            a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>TAT<span class=\"token operator\">=</span>Cmp_time<span class=\"token operator\">-</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>AT<span class=\"token punctuation\">;</span>\r\n            Total_TAT<span class=\"token operator\">=</span>Total_TAT<span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>TAT<span class=\"token punctuation\">;</span>\r\n            \r\n        <span class=\"token punctuation\">}</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    <span class=\"token keyword\">else</span>\r\n    <span class=\"token punctuation\">{</span>\r\n        <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>n<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\r\n        <span class=\"token punctuation\">{</span>\r\n            <span class=\"token keyword\">int</span> min<span class=\"token operator\">=</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>PR<span class=\"token punctuation\">;</span>\r\n            <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> j<span class=\"token operator\">=</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>j<span class=\"token operator\">&lt;</span>n<span class=\"token punctuation\">;</span>j<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\r\n            <span class=\"token punctuation\">{</span>\r\n                <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>min<span class=\"token operator\">></span>a<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>PR <span class=\"token operator\">&amp;&amp;</span> a<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>AT<span class=\"token operator\">&lt;=</span>Cmp_time<span class=\"token punctuation\">)</span>\r\n                <span class=\"token punctuation\">{</span>\r\n                    min<span class=\"token operator\">=</span>a<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>PR<span class=\"token punctuation\">;</span>\r\n                      <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                      <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>AT<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>AT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                      <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>BT<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>BT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                       <span class=\"token function\">swap</span><span class=\"token punctuation\">(</span><span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>PR<span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>a<span class=\"token punctuation\">[</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>PR<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n                <span class=\"token punctuation\">}</span>\r\n                \r\n            <span class=\"token punctuation\">}</span>\r\n            a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>WT<span class=\"token operator\">=</span>Cmp_time<span class=\"token operator\">-</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>AT<span class=\"token punctuation\">;</span>\r\n            Cmp_time<span class=\"token operator\">=</span>Cmp_time<span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>BT<span class=\"token punctuation\">;</span>\r\n            a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>TAT<span class=\"token operator\">=</span>Cmp_time<span class=\"token operator\">-</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>AT<span class=\"token punctuation\">;</span>\r\n            Total_WT<span class=\"token operator\">=</span>Total_WT<span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>WT<span class=\"token punctuation\">;</span>\r\n            Total_TAT<span class=\"token operator\">=</span>Total_TAT<span class=\"token operator\">+</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>TAT<span class=\"token punctuation\">;</span>\r\n            \r\n        <span class=\"token punctuation\">}</span>\r\n        \r\n    <span class=\"token punctuation\">}</span>\r\n    \r\n    Avg_WT<span class=\"token operator\">=</span>Total_WT<span class=\"token operator\">/</span>n<span class=\"token punctuation\">;</span>\r\n    Avg_TAT<span class=\"token operator\">=</span>Total_TAT<span class=\"token operator\">/</span>n<span class=\"token punctuation\">;</span>\r\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"The process are\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"P.NO \\t WT\\t TAT\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">int</span> i<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>i<span class=\"token operator\">&lt;</span>n<span class=\"token punctuation\">;</span>i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">{</span>\r\n        <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\\t%d\\t%d\\n\"</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>id<span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>WT<span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>TAT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    \r\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Avg waiting time is: %f\\n\"</span><span class=\"token punctuation\">,</span>Avg_WT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Avg turn around time is: %f\"</span><span class=\"token punctuation\">,</span>Avg_TAT<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>\n<blockquote>\n<p>Round Robin Scheduling Program in C</p>\n</blockquote>\n<div class=\"gatsby-highlight\" data-language=\"c\"><pre class=\"language-c\"><code class=\"language-c\"><span class=\"token macro property\"><span class=\"token directive-hash\">#</span><span class=\"token directive keyword\">include</span><span class=\"token string\">&lt;stdio.h></span></span>\r\n \r\n<span class=\"token keyword\">int</span> <span class=\"token function\">main</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\r\n<span class=\"token punctuation\">{</span>\r\n \r\n  <span class=\"token keyword\">int</span> count<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">,</span>time<span class=\"token punctuation\">,</span>remain<span class=\"token punctuation\">,</span>flag<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>time_quantum<span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">int</span> wait_time<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>turnaround_time<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>at<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>bt<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>rt<span class=\"token punctuation\">[</span><span class=\"token number\">10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Enter Total Process:\\t \"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  remain<span class=\"token operator\">=</span>n<span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>count<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>count<span class=\"token operator\">&lt;</span>n<span class=\"token punctuation\">;</span>count<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span>\r\n  <span class=\"token punctuation\">{</span>\r\n    <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Enter Arrival Time and Burst Time for Process Process Number %d :\"</span><span class=\"token punctuation\">,</span>count<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>at<span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>bt<span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n    rt<span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>bt<span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span>\r\n  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Enter Time Quantum:\\t\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token function\">scanf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"%d\"</span><span class=\"token punctuation\">,</span><span class=\"token operator\">&amp;</span>time_quantum<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\n\\nProcess\\t|Turnaround Time|Waiting Time\\n\\n\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token keyword\">for</span><span class=\"token punctuation\">(</span>time<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>count<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>remain<span class=\"token operator\">!=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span><span class=\"token punctuation\">)</span>\r\n  <span class=\"token punctuation\">{</span>\r\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>rt<span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;=</span>time_quantum <span class=\"token operator\">&amp;&amp;</span> rt<span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">]</span><span class=\"token operator\">></span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">{</span>\r\n      time<span class=\"token operator\">+=</span>rt<span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n      rt<span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n      flag<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>rt<span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">]</span><span class=\"token operator\">></span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">{</span>\r\n      rt<span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">]</span><span class=\"token operator\">-=</span>time_quantum<span class=\"token punctuation\">;</span>\r\n      time<span class=\"token operator\">+=</span>time_quantum<span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>rt<span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">]</span><span class=\"token operator\">==</span><span class=\"token number\">0</span> <span class=\"token operator\">&amp;&amp;</span> flag<span class=\"token operator\">==</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\r\n    <span class=\"token punctuation\">{</span>\r\n      remain<span class=\"token operator\">--</span><span class=\"token punctuation\">;</span>\r\n      <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"P[%d]\\t|\\t%d\\t|\\t%d\\n\"</span><span class=\"token punctuation\">,</span>count<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>time<span class=\"token operator\">-</span>at<span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>time<span class=\"token operator\">-</span>at<span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>bt<span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n      wait_time<span class=\"token operator\">+=</span>time<span class=\"token operator\">-</span>at<span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>bt<span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n      turnaround_time<span class=\"token operator\">+=</span>time<span class=\"token operator\">-</span>at<span class=\"token punctuation\">[</span>count<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\r\n      flag<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token punctuation\">}</span>\r\n    <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>count<span class=\"token operator\">==</span>n<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\r\n      count<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">else</span> <span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>at<span class=\"token punctuation\">[</span>count<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;=</span>time<span class=\"token punctuation\">)</span>\r\n      count<span class=\"token operator\">++</span><span class=\"token punctuation\">;</span>\r\n    <span class=\"token keyword\">else</span>\r\n      count<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token punctuation\">}</span>\r\n  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"\\nAverage Waiting Time= %f\\n\"</span><span class=\"token punctuation\">,</span>wait_time<span class=\"token operator\">*</span><span class=\"token number\">1.0</span><span class=\"token operator\">/</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  <span class=\"token function\">printf</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Avg Turnaround Time = %f\"</span><span class=\"token punctuation\">,</span>turnaround_time<span class=\"token operator\">*</span><span class=\"token number\">1.0</span><span class=\"token operator\">/</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\r\n  \r\n  <span class=\"token keyword\">return</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span>\r\n<span class=\"token punctuation\">}</span></code></pre></div>"}},{"node":{"frontmatter":{"title":"Typing_Speedo","cover":{"childImageSharp":{"fluid":{"tracedSVG":"data:image/svg+xml,%3csvg%20xmlns='http://www.w3.org/2000/svg'%20width='400'%20height='188'%20viewBox='0%200%20400%20188'%20preserveAspectRatio='none'%3e%3cpath%20d='M0%2094v94h401V0H0v94m331%2040c-7%204-8%206-5%2010l6%202%202%201c-1%201%200%201%201%201l2-1h2c5%203%2010-5%205-8l-2-4c-2-4-5-4-11-1M50%20157c0%202-1%202-3%202l-27-3-1%2016v15h17c14%200%2017%200%2016-1-2-2-1-7%201-8l14-1c12%200%2012%200%2014%203v5l-2%202h34v-16l-12-2-13-3h3l2-1c0-2-1-2-3-2l-3%201-1%201h-2a139%20139%200%2001-34-9v1m104%208l-1%2016v6h34l-1-3v-5c2-2%203-2%2014-2l14%201c2%201%203%206%201%208-1%201%202%201%2016%201h17v-15l-13-3c-7-1-11-3-10-3%202%200%203-1%203-2h-7c-3%201-7%200-19-2-13-3-23-4-41-5l-7-1v9m134%206v16h17c14%200%2017%200%2016-1-2-2-1-7%201-8l14-1c11%200%2012%200%2014%202v5l-1%203h33v-16l-11-2-9-2v-4l-6%201c-4%201-7%201-17-1-13-3-30-6-43-6l-8-1v15'%20fill='%2364ffda'%20fill-rule='evenodd'/%3e%3c/svg%3e","aspectRatio":2.1341463414634148,"src":"/chandrikadeb7.github.io/static/03275ed76a35f1dcc9039197427d9e7f/60290/demo1.png","srcSet":"/chandrikadeb7.github.io/static/03275ed76a35f1dcc9039197427d9e7f/847ef/demo1.png 175w,\n/chandrikadeb7.github.io/static/03275ed76a35f1dcc9039197427d9e7f/91cba/demo1.png 350w,\n/chandrikadeb7.github.io/static/03275ed76a35f1dcc9039197427d9e7f/60290/demo1.png 700w,\n/chandrikadeb7.github.io/static/03275ed76a35f1dcc9039197427d9e7f/f5f50/demo1.png 1050w,\n/chandrikadeb7.github.io/static/03275ed76a35f1dcc9039197427d9e7f/38674/demo1.png 1400w,\n/chandrikadeb7.github.io/static/03275ed76a35f1dcc9039197427d9e7f/7ded0/demo1.png 1902w","srcWebp":"/chandrikadeb7.github.io/static/03275ed76a35f1dcc9039197427d9e7f/89afa/demo1.webp","srcSetWebp":"/chandrikadeb7.github.io/static/03275ed76a35f1dcc9039197427d9e7f/9fca7/demo1.webp 175w,\n/chandrikadeb7.github.io/static/03275ed76a35f1dcc9039197427d9e7f/37a4e/demo1.webp 350w,\n/chandrikadeb7.github.io/static/03275ed76a35f1dcc9039197427d9e7f/89afa/demo1.webp 700w,\n/chandrikadeb7.github.io/static/03275ed76a35f1dcc9039197427d9e7f/78e7a/demo1.webp 1050w,\n/chandrikadeb7.github.io/static/03275ed76a35f1dcc9039197427d9e7f/03d34/demo1.webp 1400w,\n/chandrikadeb7.github.io/static/03275ed76a35f1dcc9039197427d9e7f/28445/demo1.webp 1902w","sizes":"(max-width: 700px) 100vw, 700px"}}},"tech":["HTML","CSS","Javascript"],"github":"https://salahalkaseri7.github.io/Typing-speedo","external":"https://salahalkaseri7.github.io/Typing-speedo"},"html":"<ul>\n<li>The actual idea to develop this project come from the communication accuracy or time saving, just to save time of people throught this specticular thought... i decided to make a project that when a user selects an accurate chellenge time duration, the entered message of a person will be measured or analyzed through the software, and added a tris game in which words will fall in a container at specified speed, and you have to type that words before the drop in container if failed then game over! and a history section where you can check the previous typing test result by date and time. “To complete your work faster it is important to develop typing skills, typing help you to work comfortably on the computer or in other devices,it aids in communicating with colleagues and customers, creating document, and finding new information\".Used lang. Html,css and js combine.</li>\n</ul>"}}]},"projects":{"edges":[{"node":{"frontmatter":{"title":"T1","tech":["Java","Javascript","CSS"],"github":"https://salahalkaseri7.github.io/Typing-speedo/","external":""},"html":"<p>Typing_speedo The journey! ~salah_alkaseri</p>"}}]},"contact":{"edges":[{"node":{"frontmatter":{"title":"Get In Touch","buttonText":"Mail Me"},"html":"<p>My inbox is always open. Whether you have a question or just want to say hello, I'll try my best to get back to you! Feel free to mail me about any relevant job updates.</p>"}}]}},"pageContext":{}},
    "staticQueryHashes": ["3115057458"]}